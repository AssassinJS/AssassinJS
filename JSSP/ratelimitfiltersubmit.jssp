<$
var
xfr = __request.headers['x-forwarded-for'],
ip = xfr?xfr.split(', ')[0]:__request.connection.remoteAddress;

ip = ip.replace(/\./g,'-');

if(ip in __dataObj.Session) 
{

$>
<html>
<head>
<link rel="stylesheet" href="style.css" type="text/css" />
</head>
<body>

<div id="bodyWrapper">

<div id="headerWrapper">
<div id="headerContent">
<div class="headingText left">Assassin.js</div>
<div class="headingText right">Assassin Panel</div>
</div>
</div>
<div id="contentWrapper">

<div id="contentLeft">
<div id="projectMenu" class="glowBoxBlue">
<a class="navMenuLink" href="./home.jssp">Home</a><br />
<a class="navMenuLink" href="./routes.jssp">Configure Project Routes</a><br />
<a class="navMenuLink" href="./filters.jssp">Configure Filters</a><br />
<a class="navMenuLink" href="./logout.jssp">Logout</a>
</div>
</div>
<div id="contentRight">
<$
var qs = require('querystring');
var logger = require('../system/logger');
var MyMongo = require('../system/dbconnect.js').MyMongo;
var db = new MyMongo('localhost', 27017, 'assassindb');
$>
<$
var rateLimitFilterParameters = __dataObj['filterDB']['rate-limit'];
var routesList = __dataObj['routesDB'];
var newRLFilters = qs.parse(__request.body);
$>
<$=__request.body$><br />
<$=JSON.stringify(newRLFilters)$>
<$
	db.query('filterParameters',function(collection){		
		var toSet = {};
		toSet.parameters = rateLimitFilterParameters;
		if(newRLFilters.routes !=null ||newRLFilters.routes !=undefined)
		{
			if (!(newRLFilters.routes instanceof Array))
				newRLFilters.routes = [newRLFilters.routes];
			
			for(i in newRLFilters.routes)
			{
				var routeURL = newRLFilters.routes[i];
				var updateflag = true;
				for(j in toSet.parameters)
				{
					if(toSet.parameters[j].url == routeURL)
					{
						updateflag = false;
						toSet.parameters[j].params.limitNum = parseInt(newRLFilters.limitNum,10);
						toSet.parameters[j].params.limitTime = parseInt(newRLFilters.limitTime,10);
						
						//to stop unnecessary iteration after match is found
						break;
					}
				}
				if(updateflag)
				{
					var RateLimitObj = {}
					RateLimitObj['url'] = newRLFilters.routes[i];
					RateLimitObj['params'] = {}
					RateLimitObj['params']['limitNum'] = parseInt(newRLFilters.limitNum,10);
					RateLimitObj['params']['limitTime'] = parseInt(newRLFilters.limitTime,10);
					toSet.parameters.push(RateLimitObj);
				}
				
			}
			
			collection.update({filter:'rate-limit'},{$set:toSet},{upsert:true, w:1},function(err,data){
				if(err)logger.write(err,'ratelimitfiltersubmit.jssp');		
				else
				{
					require('../filters/rate-limit').ReadFromDB();
					require('../controllers/assassinPanel').getDBParameterObjects();
				}
			});
		}	
		
	});
	
	//need to update routes collection as well, add filters array to the specific route
	db.query('routes',function(collection){
	
		if(newRLFilters.routes != undefined)
		{						
			if(!(newRLFilters.routes instanceof Array))
				newRLFilters.routes = [newRLFilters.routes];
				
			for(index in newRLFilters.routes)
			{
				var routeURL = newRLFilters.routes[index];
				var toSet = { filters:[] };
				
				for(count in routesList)
				{
					if(routesList[count].regexp === routeURL)
					{
						toSet.filters = routesList[count].filters;
						
						if(toSet.filters === undefined)
							toSet.filters = [];
							
						toSet.filters.push('rate-limit');
						
						//to stop unnecessary iteration after match is found
						break;							
					}					
				}
				
				collection.update({regexp:routeURL},{$set:toSet},{upsert:true, w:1},function(err,data){
					if(err)	logger.write(err,'ratelimitfiltersubmit.jssp');		
					else
					{
						require('../system/router').ReadFromDB();
						require('../controllers/assassinPanel').getDBParameterObjects();
					}
				});
			}
		}	
	});

$>



</div>

</div>
<div id="footerWrapper">
<div id="footerContent">
(c)2013 Adithya Chebiyyam and Sai Teja Jammalamadaka
</div>
</div>

</div>

<script language="javascript">
function toggle(tag) {
	checkboxes = [];
	if(tag.id=="useragentBlackToggle")
	{
		checkboxes = document.getElementsByName("useragentBlack");
	}
	if(tag.id=="useragentWhiteToggle")
	{
		checkboxes = document.getElementsByName("useragentWhite");
	}
	if(tag.id=="routesToggle")
	{
		checkboxes = document.getElementsByName("routes");
	}
	for(var i in checkboxes)
		checkboxes[i].checked = tag.checked;
}
</script>

</body>
</html>
<$
}
else 
{
$>
<html>
<head><title>AssassinJS:Assassinated!</title></head>
<body>
<div>
<span style="font-size:20;">401:Unauthorized Access, Login First!</span>
</div>
</body>
</html>
<$
}
$>
